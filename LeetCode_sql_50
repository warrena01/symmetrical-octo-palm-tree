-- Question 1:
select product_id
from Products
where low_fats = 'y' and recyclable = 'y'

-- Question 2:
select name
from customer
where referee_id != 2 or 
      referee_id is null

-- Question 3:
select name, population, area
from World
where area >= 3000000 
      or population >= 25000000 

-- Question 4:
select distinct(author_id) as id
from Views
where author_id = viewer_id
order by author_id asc

-- Question 5:
select tweet_id
from Tweets
where len(content) > 15

-- Question 6:
select u.unique_id, e.name
from Employees e
left join EmployeeUNI u
on e.id = u.id

-- Question 7:
select p.product_name, s.year, s.price
from  product p
inner join sales s
on p.product_id = s.product_id

-- Question 8:
select v.customer_id, count(v.visit_id) as count_no_trans
from visits v
left join transactions t
  on v.visit_id = t.visit_id
where t.amount is null
group by v.customer_id

-- Question 9:
select w1.id
from Weather w1
join Weather w2 on
--            yesterday         today       = today - yesteday
datediff(day, w2.recordDate, w1.recordDate) = 1 
and w1.temperature > w2.temperature

-- Question 10:
select a1.machine_id, 
       round(avg(a2.timestamp - a1.timestamp), 3) as processing_time
from activity a1
join activity a2 on
    a1.activity_type = 'start' and a2.activity_type = 'end'
    and a1.machine_id = a2.machine_id and a1.process_id = a2.process_id
group by a1.machine_id

-- Question 11:
select e.name, b.bonus
from Employee e
left join Bonus b on
  e.empID = b.empID
where bonus < 1000 or bonus is null

-- Question 12:
select s.student_id, s.student_name, sj.subject_name, 
       count(e.subject_name) as attended_exams
from students as s
cross join subjects as sj -- gets a table of every student and every subject
left join examinations as e on -- adds in the examinations data, where:
    s.student_id = e.student_id and -- student_id is the same
    sj.subject_name = e.subject_name -- and where the subject is the same
group by s.student_id, s.student_name, sj.subject_name
order by s.student_id, student_name

-- Question 13:
select id, movie, description, rating
from Cinema 
where id % 2 <> 0 and -- <> 0 for odds, = 0 for evens.
      description != 'boring'
order by rating desc

-- Question 14:
select p.product_id, 
       round(cast(sum(p.price * us.units) as decimal) 
            /cast(sum(us.units) as decimal), 2) as average_price
from prices as p
join unitssold as us
  on p.product_id = us.product_id 
  and us.purchase_date >= p.start_date 
  and us.purchase_date <= p.end_Date
group by p.product_id 

-- Question 15:
select p.project_id,
       round(avg(cast(e.experience_years as decimal)), 2) as average_years
from project p
join employee e on
  p.employee_id = e.employee_id
group by p.project_id

-- Question 16:
select p.project_id, 
       round((avg(cast(e.experience_years as decimal))), 2) as average_years
from project as p
left join employee as e on
  p.employee_id = e.employee_id
group by p.project_id
